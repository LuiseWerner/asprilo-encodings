
#program step(t).

processed(A,(X,Y),t) :- ordered(O,A), target(O,P), position(P,(X,Y)), shelved(S,A), not position(S,(X,Y),0),
                        &sum { positionX(S,t) } = X, &sum{ positionY(S,t) } = Y.
processed(A,C,t) :-     ordered(O,A), target(O,P), position(P,C), shelved(S,A), position(S,C,0),
                        carries(_,S,t).
processed(A,C,t) :- processed(A,C,t-1).

#program check(t).

:- ordered(O,A), target(O,P), position(P,C), not processed(A,C,t), query(t).

:- carries(R,_,t), isRobot(R), query(t).

:- position(P,(X,Y)), isStation(P), isRobot(R), query(t),
   &sum { positionX(R,t) } = X, &sum { positionY(R,t) } = Y.
:- position(P,(X,Y)), isStation(P), isShelf(S), query(t),
   &sum { positionX(S,t) } = X, &sum { positionY(S,t) } = Y.
