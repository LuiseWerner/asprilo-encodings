% #const rate=1. % NOT IMPLEMENTED


ordered(order(O),product(A),N,0) :- init(object(order,O),   value(line,(A,N))).

shelved(shelf(S),product(A),N,0) :- init(object(product,A), value(on,  (S,N))).

limit(A,O,S,M) :- M = #min { N : ordered(O,A,N,0); N' : shelved(S,A,N',0) }, ordered(O,A), shelved(S,A).

#program step(t).

 { process(A,O,S,1..M,t) : ordered(O,A), shelved(S,A), limit(A,O,S,M) } 1.

:- process(_,O,S,_,t), target(O,P), not serves(_,S,P,t).
:- process(_,O,S,_,t), target(O,P),     serves(R,S,P,t), not waits(R,t).
:- process(A,O,S,M,t), shelved(S,A,N,t-1), N < M.

shelved(S,A,N-M,t) :-     process(A,O,S,M,t), shelved(S,A,N,t-1), N >= M.
ordered(O,A,N-M,t) :-     process(A,O,S,M,t), ordered(O,A,N,t-1), N >= M.


shelved(S,A,N,  t) :- not process(A,_,S,_,t), shelved(S,A,N,t-1).
ordered(O,A,N,  t) :- not process(A,O,_,_,t), ordered(O,A,N,t-1).

%*
:- shelved(S,A,M,t-1), shelved(S,A,N,t), M > N.
:- ordered(O,A,M,t-1), shelved(S,A,N,t), M > N.
*%
