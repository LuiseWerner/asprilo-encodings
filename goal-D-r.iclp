#const rate=1.

#program check(t).

 { process(A,O,S,t) : ordered(O,A), shelved(S,A) } rate.

:- process(_,O,S,t), target(O,P), not serves(_,S,P,t).
:- process(_,O,S,t), target(O,P),     serves(R,S,P,t), not waits(R,t).

:- process(A,O,_,t), { process(A,O,_,T) : T=1..t-1 } > 0.

processed(O,t) :- isOrder(O), process(A,O,_,_) : ordered(O,A).

:- not processed(O,t), isOrder(O), query(t).

:- carries(R,_,t), isRobot(R), query(t).

:- &sum { positionX(R,t) } = X,
   &sum { positionY(R,t) } = Y, position(P,(X,Y)), isStation(P), isRobot(R), query(t).

